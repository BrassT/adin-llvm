name: CMake-windows-tmate

on:
  push:
    branches: [ "adin-llvm" ]
  pull_request:
    branches: [ "adin-llvm" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: MinSizeRel

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Debugging with tmate
      # You may pin to the exact commit or the version.
      # uses: mxschmitt/action-tmate@53a5c23a925969671a6bb98ea70a4f650928ef93
      uses: mxschmitt/action-tmate@v3.16
      with:
        # If apt should be executed with sudo or without
        sudo: # optional, default is auto
        # Whether or not to install dependencies for tmate on linux (openssh-client, xz-utils)
        install-dependencies: # optional, default is true
        # Whether to authorize only the public SSH keys of the user triggering the workflow (defaults to true if the GitHub profile of the user has a public SSH key)
        limit-access-to-actor: # optional, default is auto
        # In detached mode, the workflow job will continue while the tmate session is active
        detached: # optional, default is false
        # The hostname for your tmate server (e.g. ssh.example.org)
        tmate-server-host: # optional, default is 
        # The port for your tmate server (e.g. 2222)
        tmate-server-port: # optional, default is 
        # The RSA fingerprint for your tmate server
        tmate-server-rsa-fingerprint: # optional, default is 
        # The ed25519 fingerprint for your tmate server
        tmate-server-ed25519-fingerprint: # optional, default is 
        # Personal access token (PAT) used to call into GitHub's REST API. We recommend using a service account with the least permissions necessary. Also when generating a new PAT, select the least scopes necessary. [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)

        github-token: # optional, default is ${{ github.token }}
